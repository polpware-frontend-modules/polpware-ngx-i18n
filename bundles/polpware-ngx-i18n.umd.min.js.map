{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-i18n/lib/services/utils.ts","ng://@polpware/ngx-i18n/lib/services/ngx-translator-impl.service.ts","ng://@polpware/ngx-i18n/lib/services/hyper-translator-pipe-base.ts","ng://@polpware/ngx-i18n/lib/services/hyper-translator.pipe.ts","ng://@polpware/ngx-i18n/lib/ngx-i18n.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","equals","o1","o2","length","key","keySet","t1","isArray","create","isDefined","value","NgxTranslatorImplService","this","_dict","onTranslationChange","EventEmitter","onLangChange","onDefaultLangChange","defaultLang","currentLang","langs","prototype","getParsedResult","translations","interpolateParams","get","v","resources","ks","split","filter","a","res","i","c","undefined","params","s","replace","join","lookupDeeply","of","loadResources","assign","HyperTranslatePipeBase","lastKey","lastParams","updateValue","_this","onTranslation","_ref","markForCheck","_translate","isObservable","subscribe","transform","query","args","_i","arguments","validArgs","JSON","parse","e","SyntaxError","_dispose","event","lang","unsubscribe","ngOnDestroy","HyperTranslatePipe","_super","call","__","constructor","__extends","core","ɵɵdirectiveInject","ɵɵinjectPipeChangeDetectorRef","pure","factory","ɵfac","NgxI18nModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* tslint:disable */\r\n/**\r\n * Determines if two objects or two values are equivalent.\r\n *\r\n * Two objects or values are considered equivalent if at least one of the following is true:\r\n *\r\n * * Both objects or values pass `===` comparison.\r\n * * Both objects or values are of the same type and all of their properties are equal by\r\n *   comparing them with `equals`.\r\n *\r\n * @param o1 Object or value to compare.\r\n * @param o2 Object or value to compare.\r\n * @returns true if arguments are equal.\r\n */\r\nexport function equals(o1: any, o2: any): boolean {\r\n    if (o1 === o2) return true;\r\n    if (o1 === null || o2 === null) return false;\r\n    if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\r\n    let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\r\n    if (t1 == t2 && t1 == 'object') {\r\n        if (Array.isArray(o1)) {\r\n            if (!Array.isArray(o2)) return false;\r\n            if ((length = o1.length) == o2.length) {\r\n                for (key = 0; key < length; key++) {\r\n                    if (!equals(o1[key], o2[key])) return false;\r\n                }\r\n                return true;\r\n            }\r\n        } else {\r\n            if (Array.isArray(o2)) {\r\n                return false;\r\n            }\r\n            keySet = Object.create(null);\r\n            for (key in o1) {\r\n                if (!equals(o1[key], o2[key])) {\r\n                    return false;\r\n                }\r\n                keySet[key] = true;\r\n            }\r\n            for (key in o2) {\r\n                if (!(key in keySet) && typeof o2[key] !== 'undefined') {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/* tslint:enable */\r\n\r\nexport function isDefined(value: any): boolean {\r\n    return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function isObject(item: any): boolean {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target: any, source: any): any {\r\n    let output = Object.assign({}, target);\r\n    if (isObject(target) && isObject(source)) {\r\n        Object.keys(source).forEach((key: any) => {\r\n            if (isObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = mergeDeep(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * Replaces the parameters in the given string. A parameter is delimited by a \r\n * a pair of double braces. E.g., {{name}}\r\n * @param format The given string\r\n * @param params An object defining the values of the parameters in the string. \r\n */\r\nexport function replaceParams(format: string, params: { [key: string]: any }): string {\r\n    /*jslint unparam: true */\r\n    return format.replace(/\\{\\{([a-zA-Z]+)\\}\\}/g, function(s, key) {\r\n        return (typeof params[key] === 'undefined') ? '' : params[key];\r\n    });\r\n}\r\n\r\n/**\r\n * Looks up the given key for its corresponding values\r\n * in the given resources.\r\n * @param resources Resources \r\n * @param key String\r\n * @param interpolateParams The values for the parameters.\r\n */\r\nexport function lookupDeeply(resources: { [key: string]: any }, key: string | Array<string>, interpolateParams?: Object): string {\r\n    // Get\r\n    let ks: Array<string> = [];\r\n    if (typeof key == 'string') {\r\n        ks = key.split('.');\r\n    } else {\r\n        ks = key as Array<string>;\r\n    }\r\n\r\n    ks = ks.filter(a => a);\r\n\r\n    let res = resources;\r\n    for (let i = 0; i < ks.length; i++) {\r\n        const c = ks[i];\r\n        if (res[c]) {\r\n            res = res[c];\r\n        }\r\n        else {\r\n            res = undefined;\r\n            break;\r\n        }\r\n    }\r\n\r\n    let s: string = undefined;\r\n    if (res !== undefined && typeof res == 'string') {\r\n        s = res;\r\n        if (interpolateParams) {\r\n            s = replaceParams(res, interpolateParams);\r\n        }\r\n    }\r\n\r\n    const v = s !== undefined ? s : ks.join('.');\r\n    return v;\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { DefaultLangChangeEvent, INgxTranslator, LangChangeEvent, TranslationChangeEvent } from '../interfaces/ngx-translator.interface';\nimport { lookupDeeply } from './utils';\n\n\n/* On purpose we do not make it injectable. \n   It is up to the host to define how to do this */\n\nexport class NgxTranslatorImplService implements INgxTranslator {\n\n\n    protected _dict: { [key: string]: any } = {};\n\n    onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n    onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n    onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n\n    defaultLang = '';\n\n    currentLang = '';\n\n    langs = [];\n\n    public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n        return key;\n    }\n\n    public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        const v = lookupDeeply(this._dict, key, interpolateParams);\n        return of(v);\n    }\n\n    public loadResources(resources: { [key: string]: any }) {\n        // todo: A better implementation\n        Object.assign(this._dict, resources);\n    }\n}\n","import { ChangeDetectorRef, OnDestroy, PipeTransform } from '@angular/core';\r\nimport { isObservable, Subscription } from 'rxjs';\r\nimport { INgxTranslator, LangChangeEvent, TranslationChangeEvent } from '../interfaces/ngx-translator.interface';\r\nimport { equals, isDefined } from './utils';\r\n\r\nexport abstract class HyperTranslatePipeBase implements PipeTransform, OnDestroy {\r\n    value: string = '';\r\n    lastKey: string | null = null;\r\n    lastParams: any[] = [];\r\n    onTranslationChange: Subscription | undefined;\r\n    onLangChange: Subscription | undefined;\r\n    onDefaultLangChange: Subscription | undefined;\r\n\r\n    protected _translate: INgxTranslator;\r\n    protected _ref: ChangeDetectorRef;\r\n\r\n    updateValue(key: string, interpolateParams?: Object, translations?: any): void {\r\n        let onTranslation = (res: string) => {\r\n            this.value = res !== undefined ? res : key;\r\n            this.lastKey = key;\r\n            this._ref.markForCheck();\r\n        };\r\n        if (translations) {\r\n            let res = this._translate.getParsedResult(translations, key, interpolateParams);\r\n            if (isObservable(res.subscribe)) {\r\n                res.subscribe(onTranslation);\r\n            } else {\r\n                onTranslation(res);\r\n            }\r\n        }\r\n        this._translate.get(key, interpolateParams).subscribe(onTranslation);\r\n    }\r\n\r\n    transform(query: string, ...args: any[]): any {\r\n        if (!query || !query.length) {\r\n            return query;\r\n        }\r\n\r\n        // if we ask another time for the same key, return the last value\r\n        if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\r\n            return this.value;\r\n        }\r\n\r\n        let interpolateParams: Object | undefined = undefined;\r\n        if (isDefined(args[0]) && args.length) {\r\n            if (typeof args[0] === 'string' && args[0].length) {\r\n                // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\r\n                // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\r\n                let validArgs: string = args[0]\r\n                    .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\r\n                    .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\r\n                try {\r\n                    interpolateParams = JSON.parse(validArgs);\r\n                } catch (e) {\r\n                    throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\r\n                }\r\n            } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\r\n                interpolateParams = args[0];\r\n            }\r\n        }\r\n\r\n        // store the query, in case it changes\r\n        this.lastKey = query;\r\n\r\n        // store the params, in case they change\r\n        this.lastParams = args;\r\n\r\n        // set the value\r\n        this.updateValue(query, interpolateParams);\r\n\r\n        // if there is a subscription to onLangChange, clean it\r\n        this._dispose();\r\n\r\n        // subscribe to onTranslationChange event, in case the translations change\r\n        if (!this.onTranslationChange) {\r\n            this.onTranslationChange = this._translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\r\n                if (this.lastKey && event.lang === this._translate.currentLang) {\r\n                    this.lastKey = null;\r\n                    this.updateValue(query, interpolateParams, event.translations);\r\n                }\r\n            });\r\n        }\r\n\r\n        // subscribe to onLangChange event, in case the language changes\r\n        if (!this.onLangChange) {\r\n            this.onLangChange = this._translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n                if (this.lastKey) {\r\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n                    this.updateValue(query, interpolateParams, event.translations);\r\n                }\r\n            });\r\n        }\r\n\r\n        // subscribe to onDefaultLangChange event, in case the default language changes\r\n        if (!this.onDefaultLangChange) {\r\n            this.onDefaultLangChange = this._translate.onDefaultLangChange.subscribe(() => {\r\n                if (this.lastKey) {\r\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n                    this.updateValue(query, interpolateParams);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Clean any existing subscription to change events\r\n     */\r\n    private _dispose(): void {\r\n        if (typeof this.onTranslationChange !== 'undefined') {\r\n            this.onTranslationChange.unsubscribe();\r\n            this.onTranslationChange = undefined;\r\n        }\r\n        if (typeof this.onLangChange !== 'undefined') {\r\n            this.onLangChange.unsubscribe();\r\n            this.onLangChange = undefined;\r\n        }\r\n        if (typeof this.onDefaultLangChange !== 'undefined') {\r\n            this.onDefaultLangChange.unsubscribe();\r\n            this.onDefaultLangChange = undefined;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._dispose();\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Injectable, Pipe } from '@angular/core';\r\nimport { HyperTranslatePipeBase } from './hyper-translator-pipe-base';\r\nimport { NgxTranslatorImplService } from './ngx-translator-impl.service';\r\n\r\n@Injectable()\r\n@Pipe({\r\n    name: 'hyperTrans',\r\n    pure: false // required to update the value when the promise is resolved\r\n})\r\nexport class HyperTranslatePipe extends HyperTranslatePipeBase {\r\n\r\n    constructor(protected _translate: NgxTranslatorImplService, protected _ref: ChangeDetectorRef) {\r\n        super();\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HyperTranslatePipe } from './services/hyper-translator.pipe';\n\n@NgModule({\n    declarations: [HyperTranslatePipe],\n    imports: [\n        CommonModule,\n    ],\n    exports: [HyperTranslatePipe]\n})\nexport class NgxI18nModule { }\n"]}