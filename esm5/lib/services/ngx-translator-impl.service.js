import { EventEmitter } from "@angular/core";
import { of } from "rxjs";
import { lookupDeeply } from './utils';
/* On purpose we do not make it injectable.
   It is up to the host to define how to do this */
var NgxTranslatorImplService = /** @class */ (function () {
    function NgxTranslatorImplService() {
        this._dict = {};
        this.onTranslationChange = new EventEmitter();
        this.onLangChange = new EventEmitter();
        this.onDefaultLangChange = new EventEmitter();
        this.defaultLang = '';
        this.currentLang = '';
        this.langs = [];
    }
    NgxTranslatorImplService.prototype.getParsedResult = function (translations, key, interpolateParams) {
        return key;
    };
    NgxTranslatorImplService.prototype.get = function (key, interpolateParams) {
        var v = lookupDeeply(this._dict, key, interpolateParams);
        return of(v);
    };
    NgxTranslatorImplService.prototype.loadResources = function (resources) {
        // todo: A better implementation
        Object.assign(this._dict, resources);
    };
    return NgxTranslatorImplService;
}());
export { NgxTranslatorImplService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0b3ItaW1wbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvbHB3YXJlL25neC1pMThuLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL25neC10cmFuc2xhdG9yLWltcGwuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFdEMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUd2QzttREFDbUQ7QUFFbkQ7SUFBQTtRQUdjLFVBQUssR0FBMkIsRUFBRSxDQUFDO1FBRTdDLHdCQUFtQixHQUF5QyxJQUFJLFlBQVksRUFBMEIsQ0FBQztRQUN2RyxpQkFBWSxHQUFrQyxJQUFJLFlBQVksRUFBbUIsQ0FBQztRQUNsRix3QkFBbUIsR0FBeUMsSUFBSSxZQUFZLEVBQTBCLENBQUM7UUFFdkcsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFFakIsZ0JBQVcsR0FBRyxFQUFFLENBQUM7UUFFakIsVUFBSyxHQUFHLEVBQUUsQ0FBQztJQWVmLENBQUM7SUFiVSxrREFBZSxHQUF0QixVQUF1QixZQUFpQixFQUFFLEdBQVEsRUFBRSxpQkFBMEI7UUFDMUUsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDO0lBRU0sc0NBQUcsR0FBVixVQUFXLEdBQTJCLEVBQUUsaUJBQTBCO1FBQzlELElBQU0sQ0FBQyxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzNELE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2pCLENBQUM7SUFFTSxnREFBYSxHQUFwQixVQUFxQixTQUFpQztRQUNsRCxnQ0FBZ0M7UUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFDTCwrQkFBQztBQUFELENBQUMsQUE1QkQsSUE0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tIFwicnhqc1wiO1xuaW1wb3J0IHsgRGVmYXVsdExhbmdDaGFuZ2VFdmVudCwgSU5neFRyYW5zbGF0b3IsIExhbmdDaGFuZ2VFdmVudCwgVHJhbnNsYXRpb25DaGFuZ2VFdmVudCB9IGZyb20gJy4uL2ludGVyZmFjZXMvbmd4LXRyYW5zbGF0b3IuaW50ZXJmYWNlJztcbmltcG9ydCB7IGxvb2t1cERlZXBseSB9IGZyb20gJy4vdXRpbHMnO1xuXG5cbi8qIE9uIHB1cnBvc2Ugd2UgZG8gbm90IG1ha2UgaXQgaW5qZWN0YWJsZS4gXG4gICBJdCBpcyB1cCB0byB0aGUgaG9zdCB0byBkZWZpbmUgaG93IHRvIGRvIHRoaXMgKi9cblxuZXhwb3J0IGNsYXNzIE5neFRyYW5zbGF0b3JJbXBsU2VydmljZSBpbXBsZW1lbnRzIElOZ3hUcmFuc2xhdG9yIHtcblxuXG4gICAgcHJvdGVjdGVkIF9kaWN0OiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0ge307XG5cbiAgICBvblRyYW5zbGF0aW9uQ2hhbmdlOiBFdmVudEVtaXR0ZXI8VHJhbnNsYXRpb25DaGFuZ2VFdmVudD4gPSBuZXcgRXZlbnRFbWl0dGVyPFRyYW5zbGF0aW9uQ2hhbmdlRXZlbnQ+KCk7XG4gICAgb25MYW5nQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TGFuZ0NoYW5nZUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8TGFuZ0NoYW5nZUV2ZW50PigpO1xuICAgIG9uRGVmYXVsdExhbmdDaGFuZ2U6IEV2ZW50RW1pdHRlcjxEZWZhdWx0TGFuZ0NoYW5nZUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8RGVmYXVsdExhbmdDaGFuZ2VFdmVudD4oKTtcblxuICAgIGRlZmF1bHRMYW5nID0gJyc7XG5cbiAgICBjdXJyZW50TGFuZyA9ICcnO1xuXG4gICAgbGFuZ3MgPSBbXTtcblxuICAgIHB1YmxpYyBnZXRQYXJzZWRSZXN1bHQodHJhbnNsYXRpb25zOiBhbnksIGtleTogYW55LCBpbnRlcnBvbGF0ZVBhcmFtcz86IE9iamVjdCk6IGFueSB7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuXG4gICAgcHVibGljIGdldChrZXk6IHN0cmluZyB8IEFycmF5PHN0cmluZz4sIGludGVycG9sYXRlUGFyYW1zPzogT2JqZWN0KTogT2JzZXJ2YWJsZTxzdHJpbmcgfCBhbnk+IHtcbiAgICAgICAgY29uc3QgdiA9IGxvb2t1cERlZXBseSh0aGlzLl9kaWN0LCBrZXksIGludGVycG9sYXRlUGFyYW1zKTtcbiAgICAgICAgcmV0dXJuIG9mKHYpO1xuICAgIH1cblxuICAgIHB1YmxpYyBsb2FkUmVzb3VyY2VzKHJlc291cmNlczogeyBba2V5OiBzdHJpbmddOiBhbnkgfSkge1xuICAgICAgICAvLyB0b2RvOiBBIGJldHRlciBpbXBsZW1lbnRhdGlvblxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuX2RpY3QsIHJlc291cmNlcyk7XG4gICAgfVxufVxuIl19