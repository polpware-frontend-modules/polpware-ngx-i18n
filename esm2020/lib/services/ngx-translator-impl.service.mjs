import { EventEmitter } from "@angular/core";
import { of } from "rxjs";
import { lookupDeeply } from './utils';
/* On purpose we do not make it injectable.
   It is up to the host to define how to do this */
export class NgxTranslatorImplService {
    constructor() {
        this._dict = {};
        this.onTranslationChange = new EventEmitter();
        this.onLangChange = new EventEmitter();
        this.onDefaultLangChange = new EventEmitter();
        this.defaultLang = '';
        this.currentLang = '';
        this.langs = [];
    }
    getParsedResult(translations, key, interpolateParams) {
        return key;
    }
    get(key, interpolateParams) {
        const v = lookupDeeply(this._dict, key, interpolateParams);
        return of(v);
    }
    loadResources(resources) {
        // todo: A better implementation
        Object.assign(this._dict, resources);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRyYW5zbGF0b3ItaW1wbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvcG9scHdhcmUvbmd4LWkxOG4vc3JjL2xpYi9zZXJ2aWNlcy9uZ3gtdHJhbnNsYXRvci1pbXBsLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3QyxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXRDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFHdkM7bURBQ21EO0FBRW5ELE1BQU0sT0FBTyx3QkFBd0I7SUFBckM7UUFHYyxVQUFLLEdBQTJCLEVBQUUsQ0FBQztRQUU3Qyx3QkFBbUIsR0FBeUMsSUFBSSxZQUFZLEVBQTBCLENBQUM7UUFDdkcsaUJBQVksR0FBa0MsSUFBSSxZQUFZLEVBQW1CLENBQUM7UUFDbEYsd0JBQW1CLEdBQXlDLElBQUksWUFBWSxFQUEwQixDQUFDO1FBRXZHLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBRWpCLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBRWpCLFVBQUssR0FBRyxFQUFFLENBQUM7SUFlZixDQUFDO0lBYlUsZUFBZSxDQUFDLFlBQWlCLEVBQUUsR0FBUSxFQUFFLGlCQUEwQjtRQUMxRSxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFFTSxHQUFHLENBQUMsR0FBMkIsRUFBRSxpQkFBMEI7UUFDOUQsTUFBTSxDQUFDLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDM0QsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakIsQ0FBQztJQUVNLGFBQWEsQ0FBQyxTQUFpQztRQUNsRCxnQ0FBZ0M7UUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBEZWZhdWx0TGFuZ0NoYW5nZUV2ZW50LCBJTmd4VHJhbnNsYXRvciwgTGFuZ0NoYW5nZUV2ZW50LCBUcmFuc2xhdGlvbkNoYW5nZUV2ZW50IH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9uZ3gtdHJhbnNsYXRvci5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgbG9va3VwRGVlcGx5IH0gZnJvbSAnLi91dGlscyc7XG5cblxuLyogT24gcHVycG9zZSB3ZSBkbyBub3QgbWFrZSBpdCBpbmplY3RhYmxlLiBcbiAgIEl0IGlzIHVwIHRvIHRoZSBob3N0IHRvIGRlZmluZSBob3cgdG8gZG8gdGhpcyAqL1xuXG5leHBvcnQgY2xhc3MgTmd4VHJhbnNsYXRvckltcGxTZXJ2aWNlIGltcGxlbWVudHMgSU5neFRyYW5zbGF0b3Ige1xuXG5cbiAgICBwcm90ZWN0ZWQgX2RpY3Q6IHsgW2tleTogc3RyaW5nXTogYW55IH0gPSB7fTtcblxuICAgIG9uVHJhbnNsYXRpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxUcmFuc2xhdGlvbkNoYW5nZUV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8VHJhbnNsYXRpb25DaGFuZ2VFdmVudD4oKTtcbiAgICBvbkxhbmdDaGFuZ2U6IEV2ZW50RW1pdHRlcjxMYW5nQ2hhbmdlRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxMYW5nQ2hhbmdlRXZlbnQ+KCk7XG4gICAgb25EZWZhdWx0TGFuZ0NoYW5nZTogRXZlbnRFbWl0dGVyPERlZmF1bHRMYW5nQ2hhbmdlRXZlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcjxEZWZhdWx0TGFuZ0NoYW5nZUV2ZW50PigpO1xuXG4gICAgZGVmYXVsdExhbmcgPSAnJztcblxuICAgIGN1cnJlbnRMYW5nID0gJyc7XG5cbiAgICBsYW5ncyA9IFtdO1xuXG4gICAgcHVibGljIGdldFBhcnNlZFJlc3VsdCh0cmFuc2xhdGlvbnM6IGFueSwga2V5OiBhbnksIGludGVycG9sYXRlUGFyYW1zPzogT2JqZWN0KTogYW55IHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0KGtleTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPiwgaW50ZXJwb2xhdGVQYXJhbXM/OiBPYmplY3QpOiBPYnNlcnZhYmxlPHN0cmluZyB8IGFueT4ge1xuICAgICAgICBjb25zdCB2ID0gbG9va3VwRGVlcGx5KHRoaXMuX2RpY3QsIGtleSwgaW50ZXJwb2xhdGVQYXJhbXMpO1xuICAgICAgICByZXR1cm4gb2Yodik7XG4gICAgfVxuXG4gICAgcHVibGljIGxvYWRSZXNvdXJjZXMocmVzb3VyY2VzOiB7IFtrZXk6IHN0cmluZ106IGFueSB9KSB7XG4gICAgICAgIC8vIHRvZG86IEEgYmV0dGVyIGltcGxlbWVudGF0aW9uXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5fZGljdCwgcmVzb3VyY2VzKTtcbiAgICB9XG59XG4iXX0=