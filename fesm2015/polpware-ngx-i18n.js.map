{"version":3,"file":"polpware-ngx-i18n.js","sources":["ng://@polpware/ngx-i18n/lib/services/resource-loader.service.ts","ng://@polpware/ngx-i18n/lib/services/ngx-translator-impl.service.ts","ng://@polpware/ngx-i18n/lib/services/utils.ts","ng://@polpware/ngx-i18n/lib/services/hyper-translator.pipe.ts","ng://@polpware/ngx-i18n/lib/ngx-i18n.module.ts","ng://@polpware/ngx-i18n/public_api.ts","ng://@polpware/ngx-i18n/polpware-ngx-i18n.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport * as externalInterface from '@polpware/fe-dependencies';\r\nimport { replace } from '@polpware/fe-utilities';\r\n\r\nimport { loadJsonUriP } from '@polpware/fe-data';\r\nimport { I18n } from '@polpware/fe-data';\r\nimport { ResourceLoader } from '@polpware/fe-data';\r\n\r\nimport {\r\n    ISlidingExpireCache\r\n} from '@polpware/fe-data';\r\nimport {\r\n    SlidingExpirationCache\r\n} from '@polpware/fe-data';\r\n\r\nconst _ = externalInterface.underscore;\r\n\r\ninterface ILangOptionEntry {\r\n    code: string;\r\n    text: string;\r\n}\r\n\r\n/**\r\n * Verify if the given lang is valid. If the given lang is not valid,\r\n * this function returns a default one.\r\n * @private\r\n * @function validate\r\n * @param {Object} options The avaliable lang options.\r\n * @param {String} lang The requested lang code.\r\n * @returns {String} Verified lang code.\r\n */\r\nfunction validate(options: Array<ILangOptionEntry>, code: string) {\r\n    let lang = code || 'en-us';\r\n    const entry = _.find(options, e => e.code.substring(0, 2) === lang.substring(0, 2));\r\n    if (entry) {\r\n        lang = entry.code;\r\n    }\r\n\r\n    return lang;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class ResourceLoaderService {\r\n\r\n    private _resourceLoader: ResourceLoader;\r\n\r\n    constructor(ngZone: NgZone) {\r\n        const cache = new SlidingExpirationCache<any>(3 * 60, 5 * 60, ngZone);\r\n        this._resourceLoader = new ResourceLoader(cache);\r\n    }\r\n\r\n    public get resourceLoader() {\r\n        return this._resourceLoader;\r\n    }\r\n\r\n    /**\r\n     * Loads the dictionary for the given lang code.\r\n     * @function loadPromise\r\n     * @param {String} langCode The requested language code.\r\n     * @param {String}[] filter The optional language code which we are not interested in.\r\n     * @returns {Promise} The promise with the state of the loaded language dictionary.\r\n     * @throws {Error}\r\n     */\r\n    loadPromise(langCode: string, filter: string) {\r\n        const resourceLoader = this._resourceLoader;\r\n        return resourceLoader.getPromise<string>('lang.options', id => id)\r\n            .then(function(resolvedOptionsUrl) {\r\n                return loadJsonUriP(resolvedOptionsUrl);\r\n            })\r\n            .then(function(resolvedOptions) {\r\n                return validate(resolvedOptions, langCode);\r\n            })\r\n            .then(function(resolvedLangCode) {\r\n                if (resolvedLangCode === filter) {\r\n                    throw new Error('Loading the current language: ' + resolvedLangCode);\r\n                }\r\n                return resolvedLangCode;\r\n            })\r\n            .then(function(filteredLangCode) {\r\n                langCode = filteredLangCode;\r\n                return resourceLoader.getPromise<string>('lang.urlTmpl', id => id);\r\n            })\r\n            .then(function(resolvedUrlTmpl) {\r\n                return replace(resolvedUrlTmpl, { code: langCode });\r\n            })\r\n            .then(function(resolvedUrl) {\r\n                return loadJsonUriP(resolvedUrl);\r\n            })\r\n            .then(function(resolvedData) {\r\n                I18n.add(resolvedData.code, resolvedData.items);\r\n                I18n.recycleOthers(resolvedData.code);\r\n                return resolvedData;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Load lang options\r\n     * @function loadOptionPromise\r\n     * @returns {Promise}\r\n     */\r\n    loadOptionPromise() {\r\n        return this._resourceLoader.getPromise('lang.options', id => id)\r\n            .then(function(resolvedOptionsUrl) {\r\n                return loadJsonUriP(resolvedOptionsUrl);\r\n            });\r\n    }\r\n}\r\n","import { EventEmitter } from \"@angular/core\";\nimport { Observable, of } from \"rxjs\";\nimport { DefaultLangChangeEvent, INgxTranslator, LangChangeEvent, TranslationChangeEvent } from '../interfaces/ngx-translator.interface';\n\n\n/* On purpose we do not make it injectable. \n   It is up to the host to define how to do this */\n\nexport class NgxTranslatorImplService implements INgxTranslator {\n\n\n    private _dict: { [key: string]: any } = {};\n\n    onTranslationChange: EventEmitter<TranslationChangeEvent> = new EventEmitter<TranslationChangeEvent>();\n    onLangChange: EventEmitter<LangChangeEvent> = new EventEmitter<LangChangeEvent>();\n    onDefaultLangChange: EventEmitter<DefaultLangChangeEvent> = new EventEmitter<DefaultLangChangeEvent>();\n\n    defaultLang = '';\n\n    currentLang = '';\n\n    langs = [];\n\n    public getParsedResult(translations: any, key: any, interpolateParams?: Object): any {\n        return key;\n    }\n\n    public get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        // Get\n        let ks: Array<string> = [];\n        if (typeof key == 'string') {\n            ks = key.split('.');\n        } else {\n            ks = key as Array<string>;\n        }\n\n        ks = ks.filter(a => a);\n\n        let res = this._dict;\n        for (let i = 0; i < ks.length; i++) {\n            const c = ks[i];\n            if (res[c]) {\n                res = res[c];\n            }\n            else {\n                res = undefined;\n                break;\n            }\n        }\n\n        const v = res !== undefined ? res : key;\n        return of(v);\n    }\n\n    public loadResources(resources: { [key: string]: any }) {\n        // todo: A better implementation\n        Object.assign(this._dict, resources);\n    }\n}\n","/* tslint:disable */\r\n/**\r\n * Determines if two objects or two values are equivalent.\r\n *\r\n * Two objects or values are considered equivalent if at least one of the following is true:\r\n *\r\n * * Both objects or values pass `===` comparison.\r\n * * Both objects or values are of the same type and all of their properties are equal by\r\n *   comparing them with `equals`.\r\n *\r\n * @param o1 Object or value to compare.\r\n * @param o2 Object or value to compare.\r\n * @returns true if arguments are equal.\r\n */\r\nexport function equals(o1: any, o2: any): boolean {\r\n    if (o1 === o2) return true;\r\n    if (o1 === null || o2 === null) return false;\r\n    if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\r\n    let t1 = typeof o1, t2 = typeof o2, length: number, key: any, keySet: any;\r\n    if (t1 == t2 && t1 == 'object') {\r\n        if (Array.isArray(o1)) {\r\n            if (!Array.isArray(o2)) return false;\r\n            if ((length = o1.length) == o2.length) {\r\n                for (key = 0; key < length; key++) {\r\n                    if (!equals(o1[key], o2[key])) return false;\r\n                }\r\n                return true;\r\n            }\r\n        } else {\r\n            if (Array.isArray(o2)) {\r\n                return false;\r\n            }\r\n            keySet = Object.create(null);\r\n            for (key in o1) {\r\n                if (!equals(o1[key], o2[key])) {\r\n                    return false;\r\n                }\r\n                keySet[key] = true;\r\n            }\r\n            for (key in o2) {\r\n                if (!(key in keySet) && typeof o2[key] !== 'undefined') {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/* tslint:enable */\r\n\r\nexport function isDefined(value: any): boolean {\r\n    return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function isObject(item: any): boolean {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\nexport function mergeDeep(target: any, source: any): any {\r\n    let output = Object.assign({}, target);\r\n    if (isObject(target) && isObject(source)) {\r\n        Object.keys(source).forEach((key: any) => {\r\n            if (isObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = mergeDeep(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\r\n","import { ChangeDetectorRef, Injectable, OnDestroy, Pipe, PipeTransform } from '@angular/core';\r\nimport { isObservable, Subscription } from 'rxjs';\r\nimport { LangChangeEvent, TranslationChangeEvent } from '../interfaces/ngx-translator.interface';\r\nimport { NgxTranslatorImplService } from './ngx-translator-impl.service';\r\nimport { equals, isDefined } from './utils';\r\n\r\n@Injectable()\r\n@Pipe({\r\n    name: 'hyperTrans',\r\n    pure: false // required to update the value when the promise is resolved\r\n})\r\nexport class HyperTranslatePipe implements PipeTransform, OnDestroy {\r\n    value: string = '';\r\n    lastKey: string | null = null;\r\n    lastParams: any[] = [];\r\n    onTranslationChange: Subscription | undefined;\r\n    onLangChange: Subscription | undefined;\r\n    onDefaultLangChange: Subscription | undefined;\r\n\r\n    constructor(private translate: NgxTranslatorImplService, private _ref: ChangeDetectorRef) {\r\n    }\r\n\r\n    updateValue(key: string, interpolateParams?: Object, translations?: any): void {\r\n        let onTranslation = (res: string) => {\r\n            this.value = res !== undefined ? res : key;\r\n            this.lastKey = key;\r\n            this._ref.markForCheck();\r\n        };\r\n        if (translations) {\r\n            let res = this.translate.getParsedResult(translations, key, interpolateParams);\r\n            if (isObservable(res.subscribe)) {\r\n                res.subscribe(onTranslation);\r\n            } else {\r\n                onTranslation(res);\r\n            }\r\n        }\r\n        this.translate.get(key, interpolateParams).subscribe(onTranslation);\r\n    }\r\n\r\n    transform(query: string, ...args: any[]): any {\r\n        if (!query || !query.length) {\r\n            return query;\r\n        }\r\n\r\n        // if we ask another time for the same key, return the last value\r\n        if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\r\n            return this.value;\r\n        }\r\n\r\n        let interpolateParams: Object | undefined = undefined;\r\n        if (isDefined(args[0]) && args.length) {\r\n            if (typeof args[0] === 'string' && args[0].length) {\r\n                // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\r\n                // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\r\n                let validArgs: string = args[0]\r\n                    .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\r\n                    .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\r\n                try {\r\n                    interpolateParams = JSON.parse(validArgs);\r\n                } catch (e) {\r\n                    throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\r\n                }\r\n            } else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\r\n                interpolateParams = args[0];\r\n            }\r\n        }\r\n\r\n        // store the query, in case it changes\r\n        this.lastKey = query;\r\n\r\n        // store the params, in case they change\r\n        this.lastParams = args;\r\n\r\n        // set the value\r\n        this.updateValue(query, interpolateParams);\r\n\r\n        // if there is a subscription to onLangChange, clean it\r\n        this._dispose();\r\n\r\n        // subscribe to onTranslationChange event, in case the translations change\r\n        if (!this.onTranslationChange) {\r\n            this.onTranslationChange = this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) => {\r\n                if (this.lastKey && event.lang === this.translate.currentLang) {\r\n                    this.lastKey = null;\r\n                    this.updateValue(query, interpolateParams, event.translations);\r\n                }\r\n            });\r\n        }\r\n\r\n        // subscribe to onLangChange event, in case the language changes\r\n        if (!this.onLangChange) {\r\n            this.onLangChange = this.translate.onLangChange.subscribe((event: LangChangeEvent) => {\r\n                if (this.lastKey) {\r\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n                    this.updateValue(query, interpolateParams, event.translations);\r\n                }\r\n            });\r\n        }\r\n\r\n        // subscribe to onDefaultLangChange event, in case the default language changes\r\n        if (!this.onDefaultLangChange) {\r\n            this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {\r\n                if (this.lastKey) {\r\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\r\n                    this.updateValue(query, interpolateParams);\r\n                }\r\n            });\r\n        }\r\n\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     * Clean any existing subscription to change events\r\n     */\r\n    private _dispose(): void {\r\n        if (typeof this.onTranslationChange !== 'undefined') {\r\n            this.onTranslationChange.unsubscribe();\r\n            this.onTranslationChange = undefined;\r\n        }\r\n        if (typeof this.onLangChange !== 'undefined') {\r\n            this.onLangChange.unsubscribe();\r\n            this.onLangChange = undefined;\r\n        }\r\n        if (typeof this.onDefaultLangChange !== 'undefined') {\r\n            this.onDefaultLangChange.unsubscribe();\r\n            this.onDefaultLangChange = undefined;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._dispose();\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HyperTranslatePipe } from './services/hyper-translator.pipe';\n\n@NgModule({\n    declarations: [HyperTranslatePipe],\n    imports: [\n        CommonModule,\n    ],\n    exports: [HyperTranslatePipe]\n})\nexport class NgxI18nModule { }\n","/*\n * Public API Surface of ngx-i18n\n */\n\nexport * from './lib/interfaces/ngx-translator.interface';\nexport * from './lib/services/resource-loader.service';\nexport * from './lib/services/ngx-translator-impl.service';\nexport * from './lib/services/hyper-translator.pipe';\nexport * from './lib/ngx-i18n.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["externalInterface.underscore"],"mappings":"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"}